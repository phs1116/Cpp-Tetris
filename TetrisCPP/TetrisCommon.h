#ifndef __TETRISCOMMON_H__
#define __TETRISCOMMON_H__

#include <iostream>
#include <conio.h>

using namespace std;

enum{ EMPTY = 0, BRICK, WALL, SUB };
const static char* tile[4] = {".", "□", "■","＊"};

//블럭의 형태들을 저장

	struct Point{
		int x, y;
	};
namespace BrickShape{
	// 형태별로 블럭의 상대 좌표를 저장하는 배열. 회전의 중심이 (0,0)이다. (y,x)의 형태로 저장
	const Point shape[][4][4] = {// 블럭의 모양은 4개 블럭을 사용하며, 각각 회전 포함하여 형태마다 4종류를 가진다.
			{ { 0, 0, 1, 0, 2, 0, -1, 0 }, { 0, 0, 0, 1, 0, -1, 0, -2 }, { 0, 0, 1, 0, 2, 0, -1, 0 }, { 0, 0, 0, 1, 0, -1, 0, -2 } },

			{ { 0, 0, 1, 0, 0, 1, 1, 1 }, { 0, 0, 1, 0, 0, 1, 1, 1 }, { 0, 0, 1, 0, 0, 1, 1, 1 }, { 0, 0, 1, 0, 0, 1, 1, 1 } },

			{ { 0, 0, -1, 0, 0, -1, 1, -1 }, { 0, 0, 0, 1, -1, 0, -1, -1 }, { 0, 0, -1, 0, 0, -1, 1, -1 }, { 0, 0, 0, 1, -1, 0, -1, -1 } },

			{ { 0, 0, -1, -1, 0, -1, 1, 0 }, { 0, 0, -1, 0, -1, 1, 0, -1 }, { 0, 0, -1, -1, 0, -1, 1, 0 }, { 0, 0, -1, 0, -1, 1, 0, -1 } },

			{ { 0, 0, -1, 0, 1, 0, -1, -1 }, { 0, 0, 0, -1, 0, 1, -1, 1 }, { 0, 0, -1, 0, 1, 0, 1, 1 }, { 0, 0, 0, -1, 0, 1, 1, -1 } },

			{ { 0, 0, 1, 0, -1, 0, 1, -1 }, { 0, 0, 0, 1, 0, -1, -1, -1 }, { 0, 0, 1, 0, -1, 0, -1, 1 }, { 0, 0, 0, -1, 0, 1, 1, 1 } },

			{ { 0, 0, -1, 0, 1, 0, 0, 1 }, { 0, 0, 0, -1, 0, 1, 1, 0 }, { 0, 0, -1, 0, 1, 0, 0, -1 }, { 0, 0, -1, 0, 0, -1, 0, 1 } },

		/*	{ { 0, 0, -1, 0, -2, 0, 0, 1 }, { 0, 0, -1, 0, 0, -1, 0, -2 }, { 0, 0, 0, -1, 1, 0, 2, 0 }, { 0, 0, 1, 0, 0, 1, 0, 2 } },
			{ { 0, 0, -1, 0, -2, 0, 0, -1 }, { 0, 0, 0, -1, 0, -2, 1, 0 }, { 0, 0, 0, 1, 1, 0, 2, 0 }, { 0, 0, -1, 0, 0, 1, 0, 1 } },
			{ { 0, 0, -1, 0, -1, -1, 0, 1 }, { 0, 0, -1, 0, 0, -1, -1, -1 }, { 0, 0, -1, 0, -1, -1, 0, 1 }, { 0, 0, -1, 0, 0, -1, -1, -1 } },
			{ { 0, 0, 0, -1, -1, 0, -1, 1 }, { 0, 0, 1, 0, 0, -1, -1, -1 }, { 0, 0, 0, -1, -1, 0, -1, 1 }, { 0, 0, 1, 0, 0, -1, -1, -1 } },
			{ { 0, 0, -1, 0, -2, 0, 1, 0 }, { 0, 0, 0, -1, 0, -2, 0, 1 }, { 0, 0, -1, 0, 1, 0, 2, 0 }, { 0, 0, 0, -1, 0, 1, 0, 2 } },
			{ { 0, 0, 0, -1, 0, 1, 1, 0 }, { 0, 0, -1, 0, 1, 0, 0, 1 }, { 0, 0, 0, -1, 0, 1, -1, 0 }, { 0, 0, 0, -1, -1, 0, 1, 0 } }*/
	};
}

#endif // !__TETRISCOMMON_H__
